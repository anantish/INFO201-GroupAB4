out<-binom.test(13,20,0.5,"greater")
print(out$p.value)
survey <-read.csv("http://courses.washington.edu/psy315/datasets/Psych315W18survey.csv")
rm(list = ls())
survey <-read.csv("http://www.courses.washington.edu/psy315/datasets/Psych315W18survey.csv")
x <- survey$Exam1[survey$gender == "Female"]
y <- survey$Exam1[survey$gender == "Male"]
x <- x[!is.na(x)]
y <- y[!is.na(y)]
out <- t.test(x,y,
alternative = "two-sided",
var.equal = TRUE)
out <- t.test(x,y,
alternative = "two.sided",
var.equal = TRUE)
out$p.value
nx <- length(x)
ny <- length(y)
sp <- sqrt( ((nx-1)*sd(x)^2 + (ny-1)*sd(y)^2)/(nx-1+ny-1))
sp
d <- abs(mean(x)-mean(y))/sp
d
nx <- length(x)
ny <- length(y)
out <- power.t.test(n = (nx+ny)/2,
d = d,
sig.level = 0.05,
power = NULL,
alternative = "two.sided",
type = "two.sample")
out$power
# creating a vector named books
books <- c("The Kite Runner", "A Thousand Splendid Suns", "Da Vinci Code", "Angels and Demons", "Harry Potter", "Twilight")
print(books)
#creating another vector for top three books
top_three_books <- books [1:3]
print(top_three_books)
#
add-ending <- c("is a great read!")
#
add-ending <- ("is a great read!")
#
add_ending <- c("is a great read!")
book_reviews <- paste0(books,add_ending)
print(book_reviews)
#
add_ending <- c(" is a great read!")
book_reviews <- paste0(books,add_ending)
print(book_reviews)
#
numbers <- 1:201
#
numbers <- 1:201
#
squared_numbers <- numbers * numbers
print(squared_numbers)
squared_mean <- mean(squared_numbers)
print(squared_mean)
#
squared_median <- median(squared_numbers)
print(squared_median)
bye_book <- books[-index]
return(bye_book)
bye_book <- books[paste("-", index)]
bye_book <- books[paste(-, index)]
bye_book <- books[paste(-index)]
bye_book <- books[index]
bye_book <- books[-(index)]
bye_book <- index
#
whole_number <- round(numbers)
return(bye_book)
bye_book <- index * 2
as.integer(index)
index <- as.integer(index)
bye_book <- books[-(index)]
#index <- as.integer(index)
bye_book <- books[-(index)]
bye_book <- books[-(num1)]
bye_book <- books[-(num1)]
return(bye_book)
bye_book <- books[-(num1)]
##num1 <- as.integer(num1)
bye_book <- books[-(num1)]
return(bye_book)
#
remove_book <- function(books, num1) {
##num1 <- as.integer(num1)
bye_book <- books[-(num1)]
return(bye_book)
}
#
remove_book <- function(books, num1) {
num1 <- as.integer(num1)
bye_book <- books[-(num1)]
return(bye_book)
}
#
numbers <- 1:201
return(bye_book)
#
remove_book <- function(books, num1) {
num1 <- as.integer(num1)
bye_book <- books[-(num1)]
return(bye_book)
}
print(remove_book(books, -2))
#
remove_book <- function(books, num1) {
num1 <- as.integer(num1)
bye_book <- books[books -(num1)]
return(bye_book)
}
print(remove_book(books, -2))
#
remove_book <- function(books, num1) {
##num1 <- as.integer(num1)
bye_book <- books[books -(num1)]
return(bye_book)
}
print(remove_book(books, -2))
#
remove_book <- function(books, num1) {
##num1 <- as.integer(num1)
bye_book <- books[books -(num1)]
return(bye_book)
}
print(remove_book(books, -2))
#
remove_book <- function(books, num1) {
num1 <- as.integer(num1)
bye_book <- books[books -books(num1)]
return(bye_book)
}
print(remove_book(books, -2))
#
remove_book <- function(books, num1) {
num1 <- as.integer(num1)
bye_book <- books[books -books[num1]]
return(bye_book)
}
print(remove_book(books, -2))
#
remove_book <- function(books, num1) {
num1 <- as.integer(num1)
bye_book <- books[-num1]
return(bye_book)
}
print(remove_book(books, -2))
#
remove_book <- function(books, num1) {
num1 <- as.integer(num1)
bye_book <- books[-num1]
return(bye_book)
}
books_without_four <- remove_book(books, -4)
#
remove_book <- function(books, num1) {
num1 <- as.integer(num1)
bye_book <- books[num1]
return(bye_book)
}
books_without_four <- remove_book(books, -4)
#
remove_book <- function(books, num1) {
num1 <- as.integer(num1)
bye_book <- books[-num1]
return(bye_book)
}
books_without_four <- remove_book(books, 4)
as.Date(summer_break, "%m/%d/%y")
#
summer_break <- c("06/09/18")
as.Date(summer_break, "%m/%d/%y")
today <- c("04/09/18")
as.Date(today, "%m/%d/%y")
days_to_break <- difftime(summer_break, today)
print(days_to_break)
#
summer_break <- ("06/09/18")
as.Date(summer_break, "%m/%d/%y")
today <- ("04/09/18")
as.Date(today, "%m/%d/%y")
days_to_break <- difftime(summer_break, today)
print(days_to_break)
books_without_four <- remove_book(books, 4)
books_without_four <- remove_book(books, 4)
print(books_without_four)
#
long_titles <- books[nchar(books) > 15]
print(long_titles)
print(long_titles)
#
long_titles <- books[nchar(books) < 15]
print(long_titles)
#
sqrt(numbers)
#
squares <- sqrt(numbers) == round(sqrt(numbers))
#
squares_filter <- sqrt(numbers) == round(sqrt(numbers))
print(squares_filter)
squares <- numbers[squares_filter]
print(squares)
print(days_to_break)
days_to_break <- (summer_break) - (today)
today <- Sys.Date()
days_to_break <- (summer_break) - (today)
#
summer_break <- as.Date("06/09/18", "%m/%d/%y")
today <- Sys.Date()
days_to_break <- (summer_break) - (today)
print(days_to_break)
date_birthday <- as.Date(date, "%m/%d/%y")
make_birthday_intro <- function(name, age, date) {
date_birthday <- as.Date(date, "%m/%d/%y")
new_age <- my_age + 1
next_birthday <- (date_birthday) - (today)
birthday_intro <- paste(make_introduction(name, age), "In", next_birthday, "days Ill be", new_age)
return(birthday_intro)
}
my_bday_intro <- make_birthday_intro(my_name, my_age, "06/10/97")
#creating a variable for my age
my_age <- 20
#creating a variable to store my name in
my_name <- "Ria"
my_bday_intro <- make_birthday_intro(my_name, my_age, "06/10/97")
#creating a function with two arguments
make_introduction <- function(name, age) {
full_sentence <- paste("Hello my name is", name, "and I'm", age, "years old.")
return(full_sentence)
}
my_bday_intro <- make_birthday_intro(my_name, my_age, "06/10/97")
print(my_bday_intro)
my_bday_intro <- make_birthday_intro(my_name, my_age, "06/10/18")
print(my_bday_intro)
#creating a new variable and calling the function with two arguments
my_intro <- make_introduction(my_name, my_age)
print(my_intro)
books_without_four <- remove_book(books, 4)
print(books_without_four)
#printing the variable
print(intro_e_count)
#pulling out the letter "e" out of the variable my_intro
intro_e_count <- str_count(my_intro,"e")
#pulling out the letter "e" out of the variable my_intro
intro_e_count <- str_count(my_intro,"e")
#printing the casual sentence
print(casual_intro)
#substituting another phrase to make my_intro more casual
casual_intro <- sub("Hello my name is", "Hey, I'm", my_intro)
#printing the casual sentence
print(casual_intro)
#pulling out the letter "e" out of the variable my_intro
intro_e_count <- str_count(my_intro,"e")
#printing the variable
print(intro_e_count)
?str.count
??str.count
#creating a new variable and calling the function with two arguments
my_intro <- make_introduction(my_name, my_age)
print(my_intro)
#substituting another phrase to make my_intro more casual
casual_intro <- sub("Hello my name is", "Hey, I'm", my_intro)
#printing the casual sentence
print(casual_intro)
#pulling out the letter "e" out of the variable my_intro
intro_e_count <- str_count(my_intro,"e")
#pulling out the letter "e" out of the variable my_intro
intro_e_count <- str_extract(my_intro,"e")
#pulling out the letter "e" out of the variable my_intro
intro_e_count <- str_count(my_intro,"e")
#creating a new variable and calling the function with two arguments
my_intro <- make_introduction(my_name, my_age)
print(my_intro)
#substituting another phrase to make my_intro more casual
casual_intro <- sub("Hello my name is", "Hey, I'm", my_intro)
#printing the casual sentence
print(casual_intro)
#pulling out the letter "e" out of the variable my_intro
intro_e_count <- str_count(my_intro,"e")
#installing the stringr package
install.packages("stringr")
library(stringr)
#creating a variable for my age
my_age <- 20
#creating a variable to store my name in
my_name <- "Ria"
#creating an introduction sentence using a function
make_introduction <- function(name, age) {
full_sentence <- paste("Hello my name is", name, "and I'm", age, "years old.")
return(full_sentence)
}
#creating a new variable and calling the function with two arguments
my_intro <- make_introduction(my_name, my_age)
print(my_intro)
#substituting another phrase to make my_intro more casual
casual_intro <- sub("Hello my name is", "Hey, I'm", my_intro)
#printing the casual sentence
print(casual_intro)
#pulling out the letter "e" out of the variable my_intro
intro_e_count <- str_count(my_intro,"e")
#printing the variable
print(intro_e_count)
# creating a vector named books
books <- c("The Kite Runner", "A Thousand Splendid Suns", "Da Vinci Code", "Angels and Demons", "Harry Potter", "Twilight")
print(books)
#creating another vector for top three books
top_three_books <- books [1:3]
print(top_three_books)
#
add_ending <- c(" is a great read!")
book_reviews <- paste0(books,add_ending)
#
remove_book <- function(books, num1) {
num1 <- as.integer(num1)
bye_book <- books[-num1]
return(bye_book)
}
books_without_four <- remove_book(books, 4)
print(books_without_four)
#
long_titles <- books[nchar(books) > 15]
print(long_titles)
#
numbers <- 1:201
#
squared_numbers <- numbers * numbers
print(squared_numbers)
#
squared_mean <- mean(squared_numbers)
print(squared_mean)
#
squared_median <- median(squared_numbers)
print(squared_median)
#
squares_filter <- sqrt(numbers) == round(sqrt(numbers))
print(squares_filter)
squares <- numbers[squares_filter]
print(squares)
#
summer_break <- as.Date("06/09/18", "%m/%d/%y")
today <- Sys.Date()
days_to_break <- (summer_break) - (today)
print(days_to_break)
make_birthday_intro <- function(name, age, date) {
date_birthday <- as.Date(date, "%m/%d/%y")
new_age <- my_age + 1
next_birthday <- (date_birthday) - (today)
birthday_intro <- paste(make_introduction(name, age), "In", next_birthday, "days Ill be", new_age)
return(birthday_intro)
}
my_bday_intro <- make_birthday_intro(my_name, my_age, "06/10/18")
print(my_bday_intro)
#
add_ending <- c(" is a great read!")
book_reviews <- paste0(books,add_ending)
print(book_reviews)
#
remove_book <- function(books, num1) {
num1 <- as.integer(num1)
bye_book <- books[-num1]
return(bye_book)
}
books_without_four <- remove_book(books, 4)
#
long_titles <- books[nchar(books) > 15]
print(long_titles)
#printing the variable
print(intro_e_count)
print(book_reviews)
print(long_titles)
#finding the numbers that when taken the square root of, will be a whole number
squares_filter <- sqrt(numbers) == round(sqrt(numbers))
print(squares_filter)
squares <- numbers[squares_filter]
print(squares)
#creating an introduction sentence using a function
make_introduction <- function(name, age) {
full_sentence <- paste("Hello my name is", name, "and I'm", age, "years old.")
return(full_sentence)
}
print(my_intro)
#substituting another phrase to make my_intro more casual
casual_intro <- sub("Hello my name is", "Hey, I'm", my_intro)
#printing the casual sentence
print(casual_intro)
capital_intro <- str_to_title(my_intro)
print(capital_intro)
#creating an introduction stating our name and age, as well as when we are going to be a year older using previous functions and values
make_birthday_intro <- function(name, age, date) {
date_birthday <- as.Date(date, "%m/%d/%y")
new_age <- my_age + 1
next_birthday <- (date_birthday) - (today)
birthday_intro <- paste(make_introduction(name, age), "In", next_birthday, "days Ill be", new_age)
return(birthday_intro)
}
print(my_bday_intro)
print(book_reviews)
shiny::runApp('evictions')
runApp('evictions')
hi <- print(input$my_plot_hover)
runApp('evictions')
rm(list =ls())
setwd("C:/Users/Ria/Desktop/INFO201-GroupAB4/source_code")
shiny::runApp()
setwd("C:/Users/Ria/Desktop/INFO201-GroupAB4/source_code")
rm(list = ls())
# first, source the basic code that reads CSV etc. - always set working directory though
source("basecode.R")
# now, source the UI code
source("shootings_ui.R")
# now, source the server code
source("shootings_bar_plot.R")
